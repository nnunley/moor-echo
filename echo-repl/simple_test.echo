// Simple test without needing .load

// Test framework inline
let test_count = 0
let pass_count = 0
let fail_count = 0

let assert_eq = fn {actual, expected, ?message=""}
  test_count = test_count + 1
  if actual == expected
    pass_count = pass_count + 1
    "✓ PASS: " + message
  else
    fail_count = fail_count + 1
    "✗ FAIL: " + message + " (expected " + expected + ", got " + actual + ")"
  endif
endfn

// Run some tests
"Testing basic arithmetic:"
assert_eq(1 + 1, 2, "1 + 1 = 2")
assert_eq(5 * 3, 15, "5 * 3 = 15")
assert_eq(10 - 3, 7, "10 - 3 = 7")

"\nTesting lambdas:"
let add = fn {x, y} x + y endfn
assert_eq(add(5, 3), 8, "Simple lambda addition")

let greet = fn {name, ?greeting="Hello"} greeting + " " + name endfn
assert_eq(greet("World"), "Hello World", "Optional parameter default")
assert_eq(greet("Echo", "Hi"), "Hi Echo", "Optional parameter override")

"\nTesting control flow:"
let x = if true 10 else 20 endif
assert_eq(x, 10, "If expression")

let sum = 0
for i in [1, 2, 3]
  sum = sum + i
endfor
assert_eq(sum, 6, "For loop sum")

"\nTest Summary:"
"  Total: " + test_count
"  Passed: " + pass_count  
"  Failed: " + fail_count
if fail_count == 0
  "✅ All tests passed!"
else
  "❌ Some tests failed!"
endif