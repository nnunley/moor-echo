// The System Object (#0)
// This object serves as the central hub for the entire system.
// It holds references to core singleton objects and provides system-wide
// utility functions, establishing the "global" namespace.

object $system
    // Core singletons, making them easily accessible
    property $root_class = #1; // Assuming this object is #1
    property $thing = #2;
    property $room = #3;
    property $player = #4;
    property $player_creator = #5;

    // === UTILITY FUNCTIONS ===

    // A simple utility to check if a value is a valid object
    function is_object(value)
        return typeof(value) == OBJ;
    endfunction

    // A utility to check if a value is a valid player object
    function is_player(value)
        if (!this:is_object(value) || !valid(value))
            return false;
        endif
        // Check if the object inherits from the core player prototype
        return parent(value) == this.$player;
    endfunction

    // A utility for broadcasting a message to all connected players
    function broadcast(message)
        for player in (players())
            player:tell(message);
        endfor
    endfunction

    // A utility to hash a password (placeholders for now)
    function hash_password(password_string)
        // In a real implementation, this would use a secure hashing algorithm
        return "hashed_" + password_string;
    endfunction

endobject
